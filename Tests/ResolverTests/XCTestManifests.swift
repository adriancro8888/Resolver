#if !canImport(ObjectiveC)
import XCTest

extension ResolverArgumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverArgumentTests = [
        ("testGetKeyedArgumentPassingInImplements", testGetKeyedArgumentPassingInImplements),
        ("testGetKeyedArguments", testGetKeyedArguments),
        ("testGetPropertiesKeyedArguments", testGetPropertiesKeyedArguments),
        ("testGetSingleArgument", testGetSingleArgument),
        ("testGetSingleArgumentPassingInImplements", testGetSingleArgumentPassingInImplements),
        ("testKeyedArgumentsFunction", testKeyedArgumentsFunction),
        ("testOptionalArgument", testOptionalArgument),
        ("testPropertiesGetSingleArgument", testPropertiesGetSingleArgument),
        ("testPropertiesKeyedArgumentsFunction", testPropertiesKeyedArgumentsFunction),
        ("testPropertiesSingleArgumentFunction", testPropertiesSingleArgumentFunction),
        ("testSingleArgumentFunction", testSingleArgumentFunction),
    ]
}

extension ResolverBasicTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverBasicTests = [
        ("testRegistrationAndExplicitResolution", testRegistrationAndExplicitResolution),
        ("testRegistrationAndInferedResolution", testRegistrationAndInferedResolution),
        ("testRegistrationAndOptionalResolution", testRegistrationAndOptionalResolution),
        ("testRegistrationAndOptionalResolutionFailure", testRegistrationAndOptionalResolutionFailure),
        ("testRegistrationAndPassedResolver", testRegistrationAndPassedResolver),
        ("testRegistrationAndResolutionChain", testRegistrationAndResolutionChain),
        ("testRegistrationAndResolutionProperties", testRegistrationAndResolutionProperties),
        ("testRegistrationAndResolutionResolve", testRegistrationAndResolutionResolve),
        ("testRegistrationAndResolutionResolveArgs", testRegistrationAndResolutionResolveArgs),
        ("testRegistrationOverwritting", testRegistrationOverwritting),
        ("testRegistrationWithArgsCodeCoverage", testRegistrationWithArgsCodeCoverage),
        ("testStaticRegistrationAndResolution", testStaticRegistrationAndResolution),
        ("testStaticRegistrationWithArgsAndResolution", testStaticRegistrationWithArgsAndResolution),
    ]
}

extension ResolverClassTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverClassTests = [
        ("testRegistrationAndExplicitResolution", testRegistrationAndExplicitResolution),
        ("testRegistrationAndInferredResolution", testRegistrationAndInferredResolution),
        ("testRegistrationAndOptionalResolution", testRegistrationAndOptionalResolution),
        ("testRegistrationAndOptionalResolutionFailure", testRegistrationAndOptionalResolutionFailure),
        ("testRegistrationAndPassedResolver", testRegistrationAndPassedResolver),
        ("testRegistrationAndResolutionArguments", testRegistrationAndResolutionArguments),
        ("testRegistrationAndResolutionChain", testRegistrationAndResolutionChain),
        ("testRegistrationAndResolutionProperties", testRegistrationAndResolutionProperties),
        ("testRegistrationAndResolutionResolve", testRegistrationAndResolutionResolve),
        ("testRegistrationAndResolutionResolveArgs", testRegistrationAndResolutionResolveArgs),
        ("testRegistrationOverwriting", testRegistrationOverwriting),
    ]
}

extension ResolverContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverContainerTests = [
        ("testResolverDistinctContainers", testResolverDistinctContainers),
        ("testResolverDistinctContainersRedux", testResolverDistinctContainersRedux),
        ("testResolverParentContainerOverride", testResolverParentContainerOverride),
        ("testResolverParentContainers", testResolverParentContainers),
        ("testResolverParentOverrideSpecificNamedServices", testResolverParentOverrideSpecificNamedServices),
        ("testResolverParentOverrideSpecificUnnamedServices", testResolverParentOverrideSpecificUnnamedServices),
    ]
}

extension ResolverCyclicDependencyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverCyclicDependencyTests = [
        ("testCyclicDependencyRegistrationViaGraph", testCyclicDependencyRegistrationViaGraph),
        ("testCyclicDependencyRegistrationViaProperties", testCyclicDependencyRegistrationViaProperties),
        ("testInjectedCyclicDependencyRegistration", testInjectedCyclicDependencyRegistration),
    ]
}

extension ResolverInjectedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverInjectedTests = [
        ("testBasicInjection", testBasicInjection),
        ("testContainerInjection", testContainerInjection),
        ("testLazyInjection", testLazyInjection),
        ("testLazyInjectionArguments", testLazyInjectionArguments),
        ("testNamedInjection1", testNamedInjection1),
        ("testNamedInjection2", testNamedInjection2),
        ("testOptionalInjection", testOptionalInjection),
        ("testParentChildWeakLazyInjectedViewController", testParentChildWeakLazyInjectedViewController),
        ("testWeakLazyInjectedProtocolViewController", testWeakLazyInjectedProtocolViewController),
    ]
}

extension ResolverNameTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverNameTests = [
        ("testResolverInvalidNames", testResolverInvalidNames),
        ("testResolverMixedStringsAndNames", testResolverMixedStringsAndNames),
        ("testResolverNamesWithBaseService", testResolverNamesWithBaseService),
        ("testResolverNamesWithNoBaseService", testResolverNamesWithNoBaseService),
        ("testResolverValidNameNames", testResolverValidNameNames),
        ("testResolverValidNameStrings", testResolverValidNameStrings),
        ("testResolverWithNamedStringVariable", testResolverWithNamedStringVariable),
    ]
}

extension ResolverProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverProtocolTests = [
        ("testMultipleProtocolsWithForwarding", testMultipleProtocolsWithForwarding),
        ("testMultipleProtocolsWithImplements", testMultipleProtocolsWithImplements),
        ("testMultipleProtocolsWithOptionalResolution", testMultipleProtocolsWithOptionalResolution),
        ("testProtocolWithExplicitResolution", testProtocolWithExplicitResolution),
        ("testProtocolWithInferredResolution", testProtocolWithInferredResolution),
        ("testProtocolWithOptionalResolution", testProtocolWithOptionalResolution),
        ("testScopeSharedProtocols", testScopeSharedProtocols),
    ]
}

extension ResolverScopeNameTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverScopeNameTests = [
        ("testResolverScopeNameApplication", testResolverScopeNameApplication),
        ("testResolverScopeNameCached", testResolverScopeNameCached),
        ("testResolverScopeNameGraph", testResolverScopeNameGraph),
        ("testResolverScopeNameShared", testResolverScopeNameShared),
        ("testResolverScopeNameUnique", testResolverScopeNameUnique),
    ]
}

extension ResolverScopeReferenceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverScopeReferenceTests = [
        ("testResolverScopeApplication", testResolverScopeApplication),
        ("testResolverScopeCached", testResolverScopeCached),
        ("testResolverScopeCachedImplements", testResolverScopeCachedImplements),
        ("testResolverScopeGraph", testResolverScopeGraph),
        ("testResolverScopeShared", testResolverScopeShared),
        ("testResolverScopeUnique", testResolverScopeUnique),
    ]
}

extension ResolverScopeValueTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResolverScopeValueTests = [
        ("testResolverScopeApplication", testResolverScopeApplication),
        ("testResolverScopeCached", testResolverScopeCached),
        ("testResolverScopeGraph", testResolverScopeGraph),
        ("testResolverScopeShared", testResolverScopeShared),
        ("testResolverScopeUnique", testResolverScopeUnique),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ResolverArgumentTests.__allTests__ResolverArgumentTests),
        testCase(ResolverBasicTests.__allTests__ResolverBasicTests),
        testCase(ResolverClassTests.__allTests__ResolverClassTests),
        testCase(ResolverContainerTests.__allTests__ResolverContainerTests),
        testCase(ResolverCyclicDependencyTests.__allTests__ResolverCyclicDependencyTests),
        testCase(ResolverInjectedTests.__allTests__ResolverInjectedTests),
        testCase(ResolverNameTests.__allTests__ResolverNameTests),
        testCase(ResolverProtocolTests.__allTests__ResolverProtocolTests),
        testCase(ResolverScopeNameTests.__allTests__ResolverScopeNameTests),
        testCase(ResolverScopeReferenceTests.__allTests__ResolverScopeReferenceTests),
        testCase(ResolverScopeValueTests.__allTests__ResolverScopeValueTests),
    ]
}
#endif
